###
### Deke Kincaid
### dekekincaid@gmail.com
### TileRepeat v1.0
### Nuke 6.0v1
### Thanks to Ari Rubenstein at Curve Studios for the initial idea and back and fourth on ideas to make the tool better
### Thanks to Diogo Girondi for the texture repeat code

Gizmo {
 name tileRepeat
 help "This tiles it in the x,y,top,down directions but repeats the resolution of the image.  Also adds an offset plus trainslate to the tile.\n\ndekekincaid@gmail.com"
 lock_connections {{curve x1 0}}
 addUserKnob {20 tileRepeat}
 addUserKnob {12 translate l Translate}
 addUserKnob {7 offsetx l "offset x" R -100 100}
 addUserKnob {7 offsety l "offset y" R -100 100}
 addUserKnob {26 ""}
 addUserKnob {7 tileRepeatUp l up R 0 100}
 addUserKnob {7 tileRepeatLeft l left R 0 100}
 addUserKnob {7 tileRepeatRight l right R 0 100}
 addUserKnob {7 tileRepeatDown l down R 0 100}
 addUserKnob {41 filter T STMap1.filter}
 addUserKnob {41 full_format l format +INVISIBLE T Constant1.full_format}
 addUserKnob {41 proxy_format l "proxy format" +INVISIBLE T Constant1.proxy_format}
 addUserKnob {6 original l "retain original" +STARTLINE}
 original true
}
 Reformat {
  inputs 0
  type "to box"
  box_width {{parent.pattern.width i}}
  box_height {{parent.pattern.height i}}
  box_fixed true
  resize none
  pbb true
  name Reformat2
  xpos -140
  ypos -225
 }
 Crop {
  box {{-1*(parent.pattern.width*parent.tileRepeatLeft) i x1 -265} {-1*(parent.pattern.height*parent.tileRepeatDown) i x1 0} {parent.pattern.width*(parent.tileRepeatRight+1) i x1 1536} {parent.pattern.height*(parent.tileRepeatUp+1) i x1 512}}
  reformat true
  crop false
  name Crop2
  xpos -140
  ypos -201
 }
 Expression {
  expr0 "x%((parent.pattern.width)+1) /width*width/(parent.pattern.width)"
  expr1 "y%((parent.pattern.height)+1) / height*height/(parent.pattern.height)"
  name Expression4
  xpos -140
  ypos -129
 }
 Expression {
  temp_name0 oX
  temp_expr0 (parent.translate.x%width)+(width*(parent.offsetx/100))
  temp_name1 oY
  temp_expr1 (parent.translate.y%height)+(height*(parent.offsety/100))
  expr0 oX<0?r-(oX/width)-1:r-1+(1-oX/width)
  expr1 oY<0?g-(oY/height)-1:g-1+(1-oY/height)
  name Offset1
  xpos -140
  ypos -81
 }
 Expression {
  temp_expr2 r<0?-(-1-r):r
  expr0 r<0?(1+r):r
  expr1 g<0?(1+g):g
  name Repeat1
  xpos -140
  ypos -57
 }
 Input {
  inputs 0
  name pattern
  xpos -390
  ypos -201
 }
 Crop {
  box {{input.bbox.x i} {input.bbox.y i} {input.bbox.r i} {input.bbox.t i}}
  reformat true
  crop false
  name Crop13
  xpos -390
  ypos -105
  disable true
 }
 Transform {
  center {25 25}
  name Transform1
  xpos -390
  ypos -57
 }
 Crop {
  box {{0 i} {0 i} {pattern.width i} {pattern.height i}}
  reformat true
  crop false
  name Crop1
  xpos -390
  ypos -33
 }
 Dot {
  name Dot1
  xpos -356
  ypos 18
 }
set N23918e40 [stack 0]
 STMap {
  inputs 2
  uv rgb
  blur_scale 0
  maskChannel -rgba.alpha
  name STMap1
  xpos -140
  ypos 10
 }
 Crop {
  box {{0 i x1 -265} {0 i x1 0} {STMap1.width i x1 1536} {STMap1.height i x1 512}}
  reformat true
  name Crop5
  xpos -140
  ypos 87
 }
 Transform {
  translate {{-1*(parent.pattern.width*parent.tileRepeatLeft) i} {-1*(parent.pattern.height*parent.tileRepeatDown) i}}
  center {128 128}
  black_outside false
  name Transform2
  xpos -140
  ypos 135
 }
 Transform {
  translate {{pattern.bbox.x i} {pattern.bbox.y i}}
  center {896 512}
  name Transform3
  xpos -140
  ypos 159
  disable true
 }
set N239240a0 [stack 0]
push $N23918e40
 Crop {
  box {0 0 256 256}
  name Crop3
  xpos -390
  ypos 39
 }
 Crop {
  box {{Crop5.bbox.x i} {Crop5.bbox.y i} {Crop5.bbox.r i} {Crop5.bbox.t i}}
  reformat true
  crop false
  name Crop6
  xpos -390
  ypos 111
 }
 Dot {
  name Dot2
  xpos -356
  ypos 210
 }
push $N239240a0
 Merge2 {
  inputs 2
  name Merge1
  selected true
  xpos -240
  ypos 207
 }
 Switch {
  inputs 2
  which {{original==0?1:0}}
  name Switch1
  xpos -140
  ypos 255
 }
 Output {
  name Output1
  xpos -140
  ypos 351
 }
end_group
